package oop_method_basic;

public class Ex_Sister {

	public static void main(String[] args) {
		/*
		 * 메서드(Method)
		 * - 객체의 동작(기능)을 나타냄
		 * - 프로그램 작업의 최소 단위(= 작업을 실행하는 코드들의 모음)
		 * - 반드시 호출되어야만 사용(해당 기능 동작)할 수 있음
		 * 	 => 호출하는 메서드 : Caller <-> 호출 당하는 메서드(= 작업수행) : Worker
		 * - 메서드 호출 시 전달하는 값(데이터)을 전달인자(Argument)라고 하며,
		 *   전달되는 값을 저장하는 변수를 매개변수(Parameter)라고 함
		 *   => 이 때, 파라미터는 없을 수도 있고, 여러개 있을 수도 있음
		 * - 메서드가 호출되면 현재 수행중인 작업의 흐름이 메서드쪽을 이동하여
		 *   해당 메서드 내에 기술된 작업을 처리하고, 해당 작업이 수행 완료된 후
		 *   반드시 메서드를 호출한 위치로 흐름이 돌아감
		 *   => 이 때, 메서드 수행 완료 후 돌아갈 때 가지고 돌아갈 값을 리턴값이라고 함
		 *      리턴 값도 있을 수도 있고, 없을 수도 있음
		 * - main() 메서드는 자바에서 유일하게 프로그램 실핼 시 자동으로 호출되는 메서드
		 *   => 자바에서 main() 메서드를 플그램 시작점(Starting point)이라고 함
		 *   
		 * < 메서드 정의 기본 문법 >
		 * [제한자] 리턴타입 메서드명([파라미터...]){
		 * 		// 메서드가 호출되면 수행할 코드들...
		 * 		[return [리턴값];]
		 * } 
		 * 
		 * < 메서드 호출 기본 문법 >
		 * 참조변수명.메서드명([전달인자...]);
		 * 
		 * < 메서드 형태 분류 4가지 - 파라미터와 리턴값에 따른 분류>
		 * 1. 파라미터도 없고, 리턴값도 없는 메서드
		 * 2. 파라미터는 없고, 리턴값만 있는 메서드
		 * 3. 파라미터만 있고, 리턴값은 없는 메서드
		 * 4. 파라미터도 있고, 리턴값도 있는 메서드 
		 *  
		 */
		
		// Sister 클래스 인스턴스 생성(변수명 s)
		Sister s = new Sister();
		
		// 나 = main() 메서드 = Caller 메서드 => Worker 메서드 호출 역할
		// Worker 메서드 호출
		// => 참조변수를 통해 호출할 메서드 이름을 사용하여 메서드를 호출하며, 
		//	  파라미터가 있을 경우 소괄호() 내부에 값(전달인자 = argument)을 전달
		// => Sister 인스턴스의 참조변수 s를 통해 메서드 호출

		// 1. 파라미터도 없고, 리턴값도 없는 메서드 호출
		System.out.println("동생아! 불 좀 끄고 가라!");
		s.sister_1(); // Sister인스턴스의 sister_1() 메서드 호출(흐름이 sister_1() 메서드로 이동)
		// => 이 때, 메서드 파라미터가 없으믈 소괄호() 안에 아무런 데이터도 전달하지 않음(비워둠)
		System.out.println("동생이 불을 끄고 갔다!");
		
		
		
		
		
		
			
	} // main() 메서드 끝

} // Ex2 클래스 끝


