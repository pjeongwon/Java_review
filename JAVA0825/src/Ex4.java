
public class Ex4 {

	public static void main(String[] args) {

		/*
		 * 변수(Variable) vs 상수(Constant)
		 * - 상수 : 항상 같은 값을 갖는, 즉 변하지 않는 데이터
		 *          => 자바에서 사용되는 실제 데이터를 리터럴(Literal) 이라고 함
		 *             ex) 정수형 리터럴 1, 문자형 리터럴 'A' 등
		 * - 변수 : 변하는 데이터를 저장하는 메모리 공간
		 *          => 상수(리터럴)를 저장하는 용도로 사용하는 공간
		 *          => 언제든 다른 값으로 대체될 수 있음
		 *          
		 * 변수(Variable)
		 * - 데이터를 저장하는 메모리 공간
		 * - 변수 공간에는 한 번에 하나의 데이터만 저장 가능
		 *   => 다른 데이터를 저장하면 기존의 데이터는 제거됨
		 *      ex) 정수형 변수에 정수 1을 저장한 상태에서 정수 2를 저장하는 경우 1은 제거됨
		 * - 변수 공간은 미리 지정된 데이터타입의 데이터만 저장됨(다른 데이터타입은 저장 불가능)
		 *   ex) 정수형 변수에 실수 저장 불가. 반드시 정수만 저장 가능함
		 * - 변수를 사용하기 위해서는 반드시 변수 선언을 먼저 한 후에 데이터 저장 가능  
		 *   => 어떤 메모리 공간에 저장할 데이터타입을 정하고, 이름을 부여하는 과정을 선언이라고 함
		 * - 데이터를 저장하는 작업을 변수 초기화(Initialization) 라고 함
		 *   => 변수 선언 없이는 변수 초기화 불가능
		 *   => 또한, 변수 초기화 작업 없이는 변수 사용(데이터 저장 등)이 불가능
		 * 
		 * < 변수 선언 기본 문법 >
		 * 데이터타입 변수명;
		 * => 데이터타입에 해당하는 데이터를 저장하는 공간의 이름을 변수명에 해당하는 이름으로 생성
		 * 
		 * < 변수 초기화 기본 문법 >
		 * 변수명 = 데이터;
		 * => 대입연산자 우변의 데이터를 좌변의 변수에 전달(= 저장 = 초기화)
		 * 
		 * < 변수 선언 및 초기화를 동시에 수행하는 방법 >
		 * 데이터타입 변수명 = 데이터;
		 * 
		 * < 변수 사용 기본 문법 >
		 * 변수명을 사용하여 해당 공간에 접근 가능
		 * => 연산자를 사용하여 연산을 하거나, 출력문 등에 사용하여 저장된 데이터 출력 가능
		 * ex) System.out.println(변수명); => 변수에 저장된 데이터를 화면에 '출력' 
		 */
		
		//변수 선언
		int a; // int형(정수) 데이터를 저장할 고안을 생성하고, 해당 공간의 이름을 a로 지정
		// => a라는 이름을 사용하여 해당 공간에 접근 가능해짐(데이터 저장 등이 가능)
		
		//변수 초기화
		a = 10; // int형 변수 a라는 공간에 정수형 데이터(리터럴) 10 저장(초기화)
		// => 주의! 변수 선언 없이는 변수 초기화 또는 접근에 불가능 = 오류 발생!
		// (a cannot be resolved a variable => a라는 이름의 변수가 선언되지 않음)
		
		//변수에 접근하여 저장된 값을 출력해보기
		// => 주의! 변수를 사용하기 위해서는 선언 및 초기화가 선행되어야한다!

		System.out.println(a); //변수 a에 저장된 정수 10 출력됨
		// => 초기화를 하지 않았을 경우 The local variable a may not been initialized
		
		// 기존에 정수 10이 저장된 변수 a에 새로운 정수 99를 저장해보기
		a = 99; // 기존에 저장된 정수 10을 버리고, 새로운 정수 99로 교체됨
		System.out.println(a); // 기존에 저장된 정수 10이 아닌 교체된 정수 99 출력됨
		
		// 정수형 변수 b를 선언하고, 정수 20으로 초기화 => 한 문장으로 수행
		int b = 20;
		System.out.println(b);
	}

}
